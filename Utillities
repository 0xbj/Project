#!/bin/bash

#============================================================================================================
#                              CPU-SCALE-ARCH
#
#                       Welcome and dont disclaimer
#                     CPU-SCALE Author By shidiq -berrabe-
#         
#============================================================================================================

# Reset
Color_Off='\033[0m'       # Text Reset

# Regular Colors
Black='\033[0;30m'        # Black
Red='\033[0;31m'          # Red
Green='\033[0;32m'        # Green
Yellow='\033[0;33m'       # Yellow
Blue='\033[0;34m'         # Blue
Purple='\033[0;35m'       # Purple
Cyan='\033[0;36m'         # Cyan
White='\033[0;37m'        # White

# Bold
BBlack='\033[1;30m'       # Black
BRed='\033[1;31m'         # Red
BGreen='\033[1;32m'       # Green
BYellow='\033[1;33m'      # Yellow
BBlue='\033[1;34m'        # Blue
BPurple='\033[1;35m'      # Purple
BCyan='\033[1;36m'        # Cyan
BWhite='\033[1;37m'       # White

# Underline
UBlack='\033[4;30m'       # Black
URed='\033[4;31m'         # Red
UGreen='\033[4;32m'       # Green
UYellow='\033[4;33m'      # Yellow
UBlue='\033[4;34m'        # Blue
UPurple='\033[4;35m'      # Purple
UCyan='\033[4;36m'        # Cyan
UWhite='\033[4;37m'       # White

# Background
On_Black='\033[40m'       # Black
On_Red='\033[41m'         # Red
On_Green='\033[42m'       # Green
On_Yellow='\033[43m'      # Yellow
On_Blue='\033[44m'        # Blue
On_Purple='\033[45m'      # Purple
On_Cyan='\033[46m'        # Cyan
On_White='\033[47m'       # White

# High Intensity
IBlack='\033[0;90m'       # Black
IRed='\033[0;91m'         # Red
IGreen='\033[0;92m'       # Green
IYellow='\033[0;93m'      # Yellow
IBlue='\033[0;94m'        # Blue
IPurple='\033[0;95m'      # Purple
ICyan='\033[0;96m'        # Cyan
IWhite='\033[0;97m'       # White

# Bold High Intensity
BIBlack='\033[1;90m'      # Black
BIRed='\033[1;91m'        # Red
BIGreen='\033[1;92m'      # Green
BIYellow='\033[1;93m'     # Yellow
BIBlue='\033[1;94m'       # Blue
BIPurple='\033[1;95m'     # Purple
BICyan='\033[1;96m'       # Cyan
BIWhite='\033[1;97m'      # White

# High Intensity backgrounds
On_IBlack='\033[0;100m'   # Black
On_IRed='\033[0;101m'     # Red
On_IGreen='\033[0;102m'   # Green
On_IYellow='\033[0;103m'  # Yellow
On_IBlue='\033[0;104m'    # Blue
On_IPurple='\033[0;105m'  # Purple
On_ICyan='\033[0;106m'    # Cyan
On_IWhite='\033[0;107m'   # White

trap ctrl_c INT

function ctrl_c() {

		sleep 1
		echo " "
		echo " "
		for (( i = 0; i < 26; i++ )); do
			echo -n "+-"
		done
		echo " "
		echo -e $BBlue "Thank You & Have a Good Day || FAKHRIZAL ASSHIDDIQ"; tput sgr0
		for (( i = 0; i < 26; i++ )); do
			echo -n "+-"
		done
		echo " "
		exit
}


function archCPU(){
echo -e $BIPurple " "
echo "			+-+ +-+ +-+"
echo "			|C| |P| |U|"
echo "			+-+ +-+ +-+";tput sgr0


	echo " "
	echo  -e	  "        ----------------------------------"$BIRed"CPU SCALING"; tput sgr0
	echo -e $BBlue"	[$White"01"$BBlue]$Cyan  Show CPU Clock  "
	echo -e $BBlue"	[$White"02"$BBlue]$Cyan  Set CPU Clock   "; tput sgr0
	echo 		  "        ---------------------------------------------"
	echo -e $BBlue"	[$White"03"$BBlue]$Cyan  CPU Info  "
	echo -e $BBlue"	[$White"04"$BBlue]$Cyan  CPU help  "
	echo -e $BBlue"	[$White"05"$BBlue]$Cyan  CPU Wiki  "; tput sgr0
	echo 		  "        ---------------------------------------------"
	echo -e $BBlue"	[$White"06"$BBlue]$Cyan  Show Current Setting  "
	echo -e $BBlue"	[$White"00"$BBlue]$Cyan  Back to Menu  "


	echo -e " "
	echo -n -e $BGreen'  \033[4mShidiq@BERRABE:\033[0m >> ' ;  tput sgr0 # insert your choice
	read manage


if test $manage == '1';
		then

			watch -n 1 grep \"cpu MHz\" /proc/cpuinfo
			archCPU
			
elif test $manage == '2'
		then

			echo " "
			cpupower frequency-info | grep --color "available frequency steps"
			echo " "
			echo -ne "Enter CPU Clock"$BRed"(!Without Space)>> " ;tput sgr0
			read clock
			sudo cpupower frequency-set -u $clock
			archCPU

elif test $manage == '3'
		then

			cpupower frequency-info
			sleep 2
			archCPU

elif test $manage == '4'
		then

			cpupower --help 
			sleep 2
			archCPU
		

elif test $manage == '5'
		then

			xdg-open https://wiki.archlinux.org/index.php/CPU_frequency_scaling
			sleep 2
			archCPU

elif test $manage == '6'
		then

			tail /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq /sys/devices/system/cpu/cpu1/cpufreq/scaling_max_freq
			sleep 2
			archCPU

elif [ $manage == '0' ]
	then
		main
		
else 
	echo " "
	echo "Command Not Found, Back To Menu "
	echo " "
	archCPU
fi
}


function archServices(){
	echo -e $BIPurple " "
	echo -e "		+-+ +-+ +-+ +-+ +-+ +-+ +-+ +-+"
	echo -e "		|S| |E| |R| |V| |I| |C| |E| |S|"
	echo -e "		+-+ +-+ +-+ +-+ +-+ +-+ +-+ +-+" ;tput sgr0

	echo " "
	echo -e		  "        --------------------------------"$BIRed"ARCH SERVICES"
	echo -e $BBlue"	[$White"01"$BBlue]$Cyan  Startup Services  "
	echo -e $BBlue"	[$White"02"$BBlue]$Cyan  Active Services  "
	echo -e $BBlue"	[$White"03"$BBlue]$Cyan  Set Services   "
	echo -e $BBlue"	[$White"00"$BBlue]$Cyan  Back to Menu   "; tput sgr0
	echo " "
	#echo 		  "        ---------------------------------------------"	
	echo -n -e $BGreen'  \033[4mShidiq@BERRABE:\033[0m >> ' ;  tput sgr0 # insert your choice
	read services

		
if [ $services == '1' ]
	then

		echo " "
		echo -n "Enter State Mode (enabled / disabled) >> " ; tput sgr0
		read State
			if [ $State == 'enabled' ] || [ $State == 'disabled' ]
				then
				systemctl list-unit-files --state=$State
				archServices
			else
				echo " "
				echo "Command Not Found"
				archServices
			fi

elif [ $services == '2' ]
	then
		echo " "
		systemctl list-units | grep running
		archServices

elif [ $services == '3' ]
	then
		echo " "
		echo -n "Enter Services Name (lightdm) >> "
		read name
		echo -n "Enter Service State (Start,Stop,Enable,Disable) >> "
		read state

		if [ $state == 'start' ] || [ $state == 'stop' ] || [ $state == 'enable' ] || [ $state == 'disable' ]
			then
				echo " "
				echo "Loading For $state $name services"
				sudo systemctl $state $name
				sleep 2
				archServices
		else
			echo " "
			echo -e $Red "#### Command Not Found, Back To Services ####" ; tput sgr0
			archServices
		fi

elif [ $services == '0' ]
	then
		echo " "
		main

else 
	echo " "
	echo "Command Not Found, Back To Menu "
	echo " "
	archServices
fi
}


function archWebServer(){
echo -e $BIPurple " "
echo "		+-+ +-+ +-+ +-+ +-+ +-+"
echo "		|S| |E| |R| |V| |E| |R|"
echo "		+-+ +-+ +-+ +-+ +-+ +-+";tput sgr0


	echo " "
	echo -e		  "        ----------------------------------"$BIRed"ARCH SERVER"
	echo -e $BBlue"	[$White"01"$BBlue]$Cyan  XAMPP  "
	echo -e $BBlue"	[$White"02"$BBlue]$Cyan  Nginx  "
	echo -e $BBlue"	[$White"03"$BBlue]$Cyan  Localhost  "
	echo -e $BBlue"	[$White"00"$BBlue]$Cyan  Back to Menu   "; tput sgr0
	echo " "
	#echo 		  "        ---------------------------------------------"	
	echo -n -e $BGreen'  \033[4mShidiq@BERRABE:\033[0m >> ' ;  tput sgr0 # insert your choice
	read server

	if [ $server == '1' ]
		then

			echo " "
			echo -n "Enter State Mode (start / stop / restart) >> " ; tput sgr0
			read State

			if [ $State == 'start' ] || [ $State == 'stop' ] || [ $State == 'restart' ]
				then
					sudo /opt/lampp/./lampp $State
					archWebServer
			else
				echo " "
				echo "Command Not Found"
				archServices
			fi
	elif [ $server == '2' ]
		then

			echo " "
			echo -n "Enter State Mode (start / stop / restart) >> " ; tput sgr0
			read State

			if [ $State == 'start' ] || [ $State == 'stop' ] || [ $State == 'restart' ]
				then
					sudo systemctl $State nginx
					for (( i = 0; i < 30; i++ )); do
						echo -n "."
					done
					echo " Nginx Success to $State"
					archWebServer
			else
				echo " "
				echo "Command Not Found"
				archWebServer
			fi

	elif [ $server == '3' ]
		then
			xdg-open http://localhost
			archWebServer

	elif [ $server == '0' ]
	then
		echo " "
		main

	else 
		echo " "
		echo "Command Not Found, Back To Menu "
		echo " "
		archWebServer
fi

}


function archSystem(){
echo -e $BIPurple " "
echo "		+-+ +-+ +-+ +-+ +-+ +-+"
echo "		|S| |Y| |S| |T| |E| |M|"
echo "		+-+ +-+ +-+ +-+ +-+ +-+"; tput sgr0

	echo " "
	echo -e		  "        ----------------------------------"$BIRed"ARCH SYSTEM"
	echo -e $BBlue"	[$White"01"$BBlue]$Cyan  Status System  "
	echo -e $BBlue"	[$White"02"$BBlue]$Cyan  Remove Orphans  "
	echo -e $BBlue"	[$White"03"$BBlue]$Cyan  Hide Menu  "
	echo -e $BBlue"	[$White"00"$BBlue]$Cyan  Back to Menu   "; tput sgr0
	echo " "
	#echo 		  "        ---------------------------------------------"	
	echo -n -e $BGreen'  \033[4mShidiq@BERRABE:\033[0m >> ' ;  tput sgr0 # insert your choice
	read system

	if [ $system == '1' ]
		then
			screenfetch
			archSystem

	elif [ $system == '2' ]
		then
			sudo pacman -Rns $(pacman -Qtdq)
			archSystem

	elif [ $system == '3' ]
		then
			echo " "
			echo -n "Enter State Mode (Show / Hide) >> " ; tput sgr0
			read State

			if [ $State == 'show' ]
				then

				xfconf-query -c xsettings -p /Gtk/ShellShowsMenubar -n -t bool -s true
				xfconf-query -c xsettings -p /Gtk/ShellShowsAppmenu -n -t bool -s true

			elif [ $State == 'hide' ]
				then

				xfconf-query -c xsettings -p /Gtk/ShellShowsMenubar -n -t bool -s false
				xfconf-query -c xsettings -p /Gtk/ShellShowsAppmenu -n -t bool -s false

			else

				echo " Command Not Found, Back To Menu"
				archSystem
			fi

	elif [ $system == '0' ]
	then
		echo " "
		main

	else 
		echo " "
		echo "Command Not Found, Back To Menu "
		echo " "
		archSystem
fi
}



function main(){
echo -e $BIPurple " "
echo -e "		+-+ +-+ +-+ +-+ +-+ +-+"
echo -e "		|S| |H| |I| |D| |I| |Q|"
echo -e "		+-+ +-+ +-+ +-+ +-+ +-+"; tput sgr0


	echo " "
	echo -e		  "        ------------------------------------"$BIRed"MAIN MENU"
	echo -e $BBlue"	[$White"01"$BBlue]$Cyan  Arch System  "
	echo -e $BBlue"	[$White"02"$BBlue]$Cyan  Arch Services  "
	echo -e $BBlue"	[$White"03"$BBlue]$Cyan  Arch Server   "
	echo -e $BBlue"	[$White"04"$BBlue]$Cyan  Arch CPU   "
	echo -e $BBlue"	[$White"00"$BBlue]$Cyan  Exit   "; tput sgr0

	echo " "
	#echo 		  "        ---------------------------------------------"	
	echo -n -e $BGreen'  \033[4mShidiq@BERRABE:\033[0m >> ' ;  tput sgr0 # insert your choice
	read input


if [ $input == '1' ]
	then
		echo " "
		archSystem

elif [ $input == '2'  ]
	 then
	 	archServices

elif [ $input == '4' ]
	 then
	 	archCPU

elif [ $input == '3' ]
	then
		archWebServer


elif [ $input == '0' ]
	then
		sleep 1
		echo " "
		echo " "
		for (( i = 0; i < 52; i++ )); do
			echo -n "+"
		done
		echo " "
		echo -e $BBlue "Thank You & Have a Good Day || FAKHRIZAL ASSHIDDIQ"; tput sgr0
		for (( i = 0; i < 52; i++ )); do
			echo -n "+"
		done
		echo " "
		exit
else 
	echo " "
	echo "Command Not Found, Back To Menu "
	echo " "
	main
fi
}
main
